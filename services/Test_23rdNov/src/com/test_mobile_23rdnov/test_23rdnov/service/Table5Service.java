/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_mobile_23rdnov.test_23rdnov.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_mobile_23rdnov.test_23rdnov.*;

/**
 * Service object for domain model class Table5.
 * @see com.test_mobile_23rdnov.test_23rdnov.Table5
 */

public interface Table5Service {
   /**
	 * Creates a new table5.
	 * 
	 * @param created
	 *            The information of the created table5.
	 * @return The created table5.
	 */
	public Table5 create(Table5 created);

	/**
	 * Deletes a table5.
	 * 
	 * @param table5Id
	 *            The id of the deleted table5.
	 * @return The deleted table5.
	 * @throws EntityNotFoundException
	 *             if no table5 is found with the given id.
	 */
	public Table5 delete(Table5Id table5Id) throws EntityNotFoundException;

	/**
	 * Finds all table5s.
	 * 
	 * @return A list of table5s.
	 */
	public Page<Table5> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Table5> findAll(Pageable pageable);
	
	/**
	 * Finds table5 by id.
	 * 
	 * @param id
	 *            The id of the wanted table5.
	 * @return The found table5. If no table5 is found, this method returns
	 *         null.
	 */
	public Table5 findById(Table5Id id) throws EntityNotFoundException;
	/**
	 * Updates the information of a table5.
	 * 
	 * @param updated
	 *            The information of the updated table5.
	 * @return The updated table5.
	 * @throws EntityNotFoundException
	 *             if no table5 is found with given id.
	 */
	public Table5 update(Table5 updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the table5s in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the table5.
	 */

	public long countAll();


    public Page<Table5> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

